---
import "@fontsource-variable/dm-sans";
import Container from "../components/Container.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { Icon } from "astro-icon/components";
---

<html lang="gl">
  <head>
    <script is:inline>
      if (localStorage.getItem("theme") === null) {
        document.documentElement.setAttribute("data-theme", "black");
      } else
        document.documentElement.setAttribute(
          "data-theme",
          localStorage.getItem("theme")
        );
    </script>
    <script>
      import { themeChange } from "theme-change";
      themeChange();
    </script>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/profile.webp" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <title>Rounak's CV</title>
  </head>
  <body class="flex flex-col min-h-screen">
    <Header />
    <div
      class="flex items-center absolute top-4 right-4 md:top-6 md:right-6 lg:top-8 lg:right-8 xl:top-10 xl:right-10 z-10"
    >
      <Icon name="carbon:moon" class="w-4 h-4" />
      <input
        type="checkbox"
        data-toggle-theme="black,lofi"
        data-act-class="ACTIVECLASS"
        class="toggle toggle-sm mx-1 bg-secondary"
        checked
      />
      <Icon name="carbon:light" class="w-4 h-4" />
    </div>

    <div
      class="divider mx-auto h-fit max-w-3xl w-[95vw] flex flex-nowrap bg-secondary"
    >
    </div>
    <main
      class="mx-auto flex-grow max-h-[90vh] md:max-h-[70vh] max-w-3xl overflow-y-scroll py-2 grid w-[95vw]"
    >
      <div class="container">
        <Container />
      </div>
    </main>
    <Footer class="flex justify-center items-center py-4" />
    
    <!-- Custom Cursor Element -->
    <div class="custom-cursor" id="cursor"></div>
    
    <script>
      // Custom cursor functionality
      const cursor = document.getElementById('cursor');
      let mouseX = 0;
      let mouseY = 0;
      let cursorX = 0;
      let cursorY = 0;

      // Track mouse movement
      document.addEventListener('mousemove', (e) => {
        mouseX = e.clientX;
        mouseY = e.clientY;
      });

      // Smooth cursor animation
      function animateCursor() {
        const speed = 0.15;
        cursorX += (mouseX - cursorX) * speed;
        cursorY += (mouseY - cursorY) * speed;
        
        cursor.style.left = cursorX - 10 + 'px';
        cursor.style.top = cursorY - 10 + 'px';
        
        requestAnimationFrame(animateCursor);
      }
      animateCursor();

      // Add hover effects for interactive elements
      const interactiveElements = document.querySelectorAll('a, button, .btn, input, textarea, select, .toggle');
      
      interactiveElements.forEach(element => {
        element.addEventListener('mouseenter', () => {
          cursor.classList.add('hover');
        });
        
        element.addEventListener('mouseleave', () => {
          cursor.classList.remove('hover');
        });
      });

      // Hide cursor when mouse leaves window
      document.addEventListener('mouseleave', () => {
        cursor.style.opacity = '0';
      });

      document.addEventListener('mouseenter', () => {
        cursor.style.opacity = '1';
      });
    </script>
  </body>
</html>

<style is:global>
  body {
    font-family: "DM Sans Variable", sans-serif;
    cursor: none; /* Hide default cursor */
  }

  /* Custom Retro Cursor */
  .custom-cursor {
    position: fixed;
    width: 20px;
    height: 20px;
    background: linear-gradient(45deg, #00ffff, #ff00ff);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.1s ease;
    box-shadow: 
      0 0 10px #00ffff,
      0 0 20px #00ffff,
      0 0 30px #00ffff;
  }

  .custom-cursor::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 40px;
    height: 40px;
    background: rgba(0, 255, 255, 0.1);
    border: 2px solid rgba(0, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(1.5);
      opacity: 0;
    }
  }

  /* Cursor hover effects */
  .custom-cursor.hover {
    transform: scale(1.5);
    background: linear-gradient(45deg, #ff00ff, #00ffff);
    box-shadow: 
      0 0 15px #ff00ff,
      0 0 25px #ff00ff,
      0 0 35px #ff00ff;
  }

  /* Interactive elements cursor effect */
  a, button, .btn, input, textarea, select {
    cursor: none;
  }

  a:hover, button:hover, .btn:hover {
    position: relative;
  }

  a:hover::after, button:hover::after, .btn:hover::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: rgba(0, 255, 255, 0.1);
    border-radius: 8px;
    transform: translate(-50%, -50%);
    pointer-events: none;
    animation: retro-glow 0.3s ease;
  }

  @keyframes retro-glow {
    0% {
      transform: translate(-50%, -50%) scale(0.8);
      opacity: 0;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
  }

  @media (min-width: 768px) {
    .container {
      display: flex;
      flex-wrap: wrap;
    }
  }

  @media only screen and (max-width: 480px) {
    * {
      font-size: 12px;
    }
  }

  .overflow-y-scroll::-webkit-scrollbar {
    width: 3px;
  }

  .overflow-y-scroll::-webkit-scrollbar-thumb {
    background-color: oklch(var(--s));
  }

  .overflow-y-scroll {
    scrollbar-width: 1px;
  }

  @media (max-width: 768px) {
    .container {
      flex-direction: column;
    }
  }

  @media (min-width: 768px) {
    .container {
      display: flex;
      flex-wrap: wrap;
    }
  }
</style>
